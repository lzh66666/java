package nuc.ss.teststudent;

import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.Map.Entry;

public class TestStudentMap {
	public static void main(String[] args) {
		Map<Integer, Student2> map = new HashMap<Integer, Student2>();
		StudentMap studentMap = new StudentMap();
		
		Scanner sc = new Scanner(System.in);
		int no;
		
		while (true) {
			menu();
			int choise = sc.nextInt();
			switch (choise) {
			case 1:
				studentMap.init(map);
				break;
			case 2:
				studentMap.print(map);
				break;
			case 3:
				System.out.println("请输入你要删除学生的姓名:");
				no = sc.nextInt();
				if(studentMap.delete(map, no)) {
					System.out.println("删除成功");
				}else {
					System.out.println("没有" + no);
				}
				break;
			case 4:
				System.out.println("请输入要查找的学生姓名");
				no = sc.nextInt();
				if(!studentMap.search(map, no)) {
					System.out.println("没有该学生");
				}
				break;
			default:
				System.out.println("请输入: 1-4");
				continue;
			}
		}
	}
	
	private static void menu() {
		System.out.println("1.初始化增加学生信息");
		System.out.println("2.遍历学生信息");
		System.out.println("3.删除学生信息");
		System.out.println("4.查找学生信息");
		System.out.println("请输入你的选择");
	}
}

class StudentMap{
	/**
	 * 保存学生成员
	 * @param map
	 */
	public void init(Map<Integer, Student2> map) {
		Student2 stu1,stu2,stu3,stu4,stu5,stu6;
		stu1 = new Student2(18001, "张剑飞", 20);
		stu2 = new Student2(18001, "李隆基", 18);
		stu3 = new Student2(18003, "孙正贤", 19);
		stu4 = new Student2(18004, "赵匡胤", 20);
		stu5 = new Student2(18005, "孙祥熙", 17);
		stu6 = new Student2(18001, "张剑飞", 20);

		map.put(18001, stu1);
		map.put(18002, stu2);
		map.put(18003, stu3);
		map.put(18004, stu4);
		map.put(18005, stu5);
		map.put(18006, stu6);
	}
	
	/**
	 * 遍历成员
	 * @param map
	 */
	public void print(Map<Integer, Student2> map) {
		Iterator<Entry<Integer, Student2>> iter = map.entrySet().iterator();
		while(iter.hasNext()) {
			System.out.println(iter.next());
		}
	}
	
	/**
	 * 删除成员
	 * @param map
	 * @param name
	 * @return
	 */
	public boolean delete(Map<Integer, Student2> map,int no) {
		Iterator<Integer> iter = map.keySet().iterator();
		while(iter.hasNext()) {
			int no1 = iter.next();
			if(no1 == no) {
				map.remove(no);
				return true;
			}
		}
		return false;
	}
	
	/**
	 * 查找成员
	 * @param map
	 * @param name
	 * @return
	 */
	public boolean search(Map<Integer, Student2> map,int no) {
		Iterator<Entry<Integer, Student2>> iter = map.entrySet().iterator();
		while(iter.hasNext()) {
			Entry<Integer, Student2> entry = iter.next();
			if(no == entry.getKey()) {
				System.out.println(entry.getValue());
				return true;
			}
		}
		return false;
	}
}

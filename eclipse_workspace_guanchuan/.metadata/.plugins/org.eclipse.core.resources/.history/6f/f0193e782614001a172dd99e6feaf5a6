package nuc.ss.shopping.frame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import nuc.ss.shopping.dao.BookDaoImpl;
import nuc.ss.shopping.dao.IBookDao;
import nuc.ss.shopping.entiy.Book;
import nuc.ss.shopping.entiy.User;


public class BookListFormFrame extends JFrame{
	private static final long serialVersionUID = 1L;

	private BookListFormFrame bookListForm;
	
	/* 登录页/用户详情页传递的登录用户对象 */
	@SuppressWarnings("unused")
	static
	User user = null;
	
	/* 书籍集合数据 */
	@SuppressWarnings("unused")
	private List<Book> mBooks = null;

	private JLabel lblBookName, lblCart, lblQuantity, lblCartDetail;
	private JTable tblBooks;
	private JButton btnQuery, btnBuy;
	private JScrollPane scrollPane;
	private JTextField txtBookId;
	
	public BookListFormFrame getBookListForm() {
		return bookListForm;
	}
	
	public BookListFormFrame(User user) {
		setTitle("电商购物平台--商品查询购买页面");
		setBounds(100, 100, 380, 450);
		setResizable(false);
		getContentPane().setLayout(null);
		bookListForm = this;
		this.user = user;
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		init();
		
		setCenter(this);
		
		this.setVisible(true);
	}
	
	private void init() {
		lblBookName = new JLabel("书籍编号：");
		lblBookName.setBounds(10, 24, 70, 15);
		add(lblBookName);
		
		txtBookId = new JTextField(10);
		txtBookId.setBounds(71, 19, 159, 25);
		add(txtBookId);

		btnQuery = new JButton("查询");
		btnQuery.setBounds(250, 15, 70, 32);
		add(btnQuery);
		
		tblBooks = new JTable();
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 57, 350, 273);
		scrollPane.setViewportView(tblBooks);
		add(scrollPane);
		
		// 显示书籍信息
		initBooksTableModel();
		showBooks(null);
		
		btnBuy = new JButton("购 买");
		btnBuy.setBounds(464, 380, 70, 32);
		add(btnBuy);
		
		JButton btnHome = new JButton("Home");
		btnHome.setBounds(230, 380, 70, 32);
		add(btnHome);
		
		btnHome.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// 返回登录界面
				LoginRegFrame loginForm = new LoginRegFrame();
				loginForm.getLoginRegFrame().setVisible(true);
				bookListForm.dispose();
				
			}
		});
		
		lblCart = new JLabel("购物车商品数：");
		lblCart.setBounds(10, 388, 110, 15);
		add(lblCart);
		
		lblQuantity = new JLabel("0件");
		lblQuantity.setBounds(111, 388, 42, 15);
		add(lblQuantity);

		lblCartDetail = new JLabel("查看详情");
		lblCartDetail.setForeground(Color.BLUE);
		lblCartDetail.setBounds(150, 388, 61, 15);
		add(lblCartDetail);


		
		// 查询按钮点击 - 事件处理程序
		btnQuery.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				String bid = txtBookId.getText().toString();

				// 显示书籍信息
				initBooksTableModel();
				showBooks(bid);
			}
		});
	}

	/**
	 * 初始化表格控件(书籍表)
	 */
	private void initBooksTableModel() {
		// 创建一个JTable的默认显示模式
		DefaultTableModel dt = new DefaultTableModel();
		// 设置JTable的列的个数和列的名字
		dt.setColumnIdentifiers(new Object[] { "书籍编号", "书籍名称", "书籍作者", "库存", "书籍分类" });

		tblBooks.setBackground(new Color(255, 255, 255));
		// 设置JTable表格对象被选中行的背景色
		tblBooks.setSelectionBackground(new Color(128, 0, 255));
		// 设置JTable表格对象被选中行的字体色
		tblBooks.setSelectionForeground(new Color(255, 255, 255));
		// 为表格设置商品信息表格模型
		tblBooks.setModel(dt);
		tblBooks.isCellEditable(tblBooks.getSelectedRow(),
				tblBooks.getSelectedColumn());

		tblBooks.getColumnModel().getColumn(0).setPreferredWidth(70);
		tblBooks.getColumnModel().getColumn(1).setPreferredWidth(150);
		tblBooks.getColumnModel().getColumn(2).setPreferredWidth(70);
		tblBooks.getColumnModel().getColumn(3).setPreferredWidth(70);
		tblBooks.getColumnModel().getColumn(4).setPreferredWidth(164);

	}

	/**
	 * 在表格中显示书籍信息
	 * 
	 */
	private void showBooks(String bid) {

		IBookDao dao = new BookDaoImpl(); 
		List<Book> books = dao.queryAllBooks();
		List<Book> bookss = new ArrayList<Book>();

		Iterator<Book> iter = books.iterator();
		Book book = null;
		// 判断是否查询到了满足条件的书籍信息
		// 在表格中显示数据
		DefaultTableModel dt = (DefaultTableModel) tblBooks.getModel();
		if(bid != null) {
			while (iter.hasNext()) {
				book = iter.next();
				if (book.getBid().equals(bid)) {
					bookss.add(book);
				}
			}
			if (bookss == null || bookss.size() == 0) {
				JOptionPane.showMessageDialog(null, "没有满足条件的书籍信息", "警告信息", JOptionPane.WARNING_MESSAGE);
				return;
			}else {
				dt.setRowCount(bookss.size());
				dt.setColumnCount(5);
				for (int i = 0; i < bookss.size(); i++) {
					dt.setValueAt(bookss.get(i).getBid(), i, 0);
					dt.setValueAt(bookss.get(i).getName(), i, 1);
					dt.setValueAt(bookss.get(i).getAuthor(), i, 2);
					dt.setValueAt(bookss.get(i).getPrice(), i, 3);
					dt.setValueAt(bookss.get(i).getNum(), i, 4);
				}	
			}
		} else {
			dt.setRowCount(books.size());
			dt.setColumnCount(5);
			for (int i = 0; i < books.size(); i++) {
				dt.setValueAt(books.get(i).getBid(), i, 0);
				dt.setValueAt(books.get(i).getName(), i, 1);
				dt.setValueAt(books.get(i).getAuthor(), i, 2);
				dt.setValueAt(books.get(i).getPrice(), i, 3);
				dt.setValueAt(books.get(i).getNum(), i, 4);
			}
		}

		
		
		
		
		// end
	}

	/**
	 * 窗体自动居中 
	 * 
	 * @param window
	 */
	private void setCenter(JFrame window) {
		// 获取屏幕的大小
		Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
		int width = window.getWidth();
		int height = window.getHeight();
		// 居中显示
		window.setBounds((d.width - width) / 2, 
				         (d.height - height) / 2, 
				          width,
				          height);
		
	}
	
	public static void main(String[] args) {
		new BookListFormFrame(user);
	}
	
}
